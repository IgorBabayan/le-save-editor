<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
	<Style TargetType="Button">
		<Setter Property="FontFamily" Value="{DynamicResource FontAwesomeSolid}"></Setter>
		<Setter Property="Background" Value="{DynamicResource BackgroundColor}"></Setter>
		<Setter Property="BorderThickness" Value="0"></Setter>

		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Border Background="{TemplateBinding Background}" BorderBrush="{DynamicResource BackgroundColor}" BorderThickness="0">
						<ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>

		<Style.Triggers>
			<Trigger Property="IsMouseOver" Value="True">
				<Setter Property="Background" Value="{DynamicResource HoverColor}"></Setter>
			</Trigger>
		</Style.Triggers>
	</Style>

	<Style TargetType="Button" x:Key="CloseButton">
		<Setter Property="FontFamily" Value="{DynamicResource FontAwesomeSolid}"></Setter>
		<Setter Property="Background" Value="{DynamicResource BackgroundColor}"></Setter>
		<Setter Property="BorderThickness" Value="0"></Setter>

		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Border Background="{TemplateBinding Background}" BorderBrush="{DynamicResource BackgroundColor}" BorderThickness="0">
						<ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>

		<Style.Triggers>
			<Trigger Property="IsMouseOver" Value="True">
				<Setter Property="Background" Value="{DynamicResource ErrorColor}"></Setter>
			</Trigger>
		</Style.Triggers>
	</Style>

	<Style TargetType="Button" x:Key="ReloadButton">
		<Setter Property="FontFamily" Value="{DynamicResource FontAwesomeSolid}"></Setter>
		<Setter Property="Background" Value="{DynamicResource BackgroundColor}"></Setter>
		<Setter Property="BorderThickness" Value="0"></Setter>

		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Border Background="{TemplateBinding Background}" BorderBrush="{DynamicResource BackgroundColor}" BorderThickness="0">
						<ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>

		<Style.Triggers>
			<Trigger Property="IsMouseOver" Value="True">
				<Setter Property="Background" Value="{DynamicResource SuccessColor}"></Setter>
			</Trigger>
		</Style.Triggers>
	</Style>

	<Style TargetType="Button" x:Key="ImageButton">
		<Setter Property="Background" Value="Transparent"></Setter>
		<Setter Property="BorderThickness" Value="0"></Setter>
		<Setter Property="Cursor" Value="Hand"></Setter>

		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Border Background="{TemplateBinding Background}" BorderBrush="Transparent" BorderThickness="0">
						<ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="Button" x:Key="LeftTabButton">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Grid>
						<Image Source="/Images/Misc/Left.png" x:Name="bkgImage" Stretch="UniformToFill"></Image>
						<ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
					</Grid>
					
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter TargetName="bkgImage" Property="Source" Value="/Images/Misc/HoverLeft.png"></Setter>
						</Trigger>

						<Trigger Property="IsPressed" Value="True">
							<Setter TargetName="bkgImage" Property="Source" Value="/Images/Misc/PressedLeft.png"></Setter>
						</Trigger>

						<Trigger Property="IsDefault" Value="True">
							<Setter TargetName="bkgImage" Property="Source" Value="/Images/Misc/ActiveLeft.png"></Setter>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="Button" x:Key="RightTabButton">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Grid>
						<Image Source="/Images/Misc/Right.png" x:Name="bkgImage" Stretch="Fill"></Image>
						<ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
					</Grid>

					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter TargetName="bkgImage" Property="Source" Value="/Images/Misc/HoverRight.png"></Setter>
						</Trigger>

						<Trigger Property="IsPressed" Value="True">
							<Setter TargetName="bkgImage" Property="Source" Value="/Images/Misc/PressedRight.png"></Setter>
						</Trigger>

						<Trigger Property="IsDefault" Value="True">
							<Setter TargetName="bkgImage" Property="Source" Value="/Images/Misc/ActiveRight.png"></Setter>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="Button" x:Key="TabButton">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Grid>
						<Image Source="/Images/Misc/Tab.png" x:Name="bkgImage" Stretch="Fill"></Image>
						<ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Margin="5"/>
					</Grid>

					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter TargetName="bkgImage" Property="Source" Value="/Images/Misc/HoverTab.png"></Setter>
						</Trigger>

						<Trigger Property="IsPressed" Value="True">
							<Setter TargetName="bkgImage" Property="Source" Value="/Images/Misc/PressedTab.png"></Setter>
						</Trigger>

						<Trigger Property="IsDefault" Value="True">
							<Setter TargetName="bkgImage" Property="Source" Value="/Images/Misc/ActiveTab.png"></Setter>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
</ResourceDictionary>