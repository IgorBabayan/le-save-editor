<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
	<Style TargetType="Button" x:Key="ImageButton">
		<Setter Property="Background" Value="Transparent"></Setter>
		<Setter Property="BorderThickness" Value="0"></Setter>
		<Setter Property="Cursor" Value="Hand"></Setter>

		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Border Background="{TemplateBinding Background}" BorderBrush="Transparent" BorderThickness="0" Margin="0" Padding="0">
						<ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="DockButtonStyle" TargetType="Button">
		<Setter Property="Height" Value="50" />
		<Setter Property="Width" Value="50" />

		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Border x:Name="ButtonBorder" BorderThickness="0"
							Background="{TemplateBinding Background}" />
				</ControlTemplate>
			</Setter.Value>
		</Setter>

		<Style.Triggers>
			<EventTrigger RoutedEvent="MouseEnter">
				<BeginStoryboard>
					<Storyboard>
						<DoubleAnimation Storyboard.TargetProperty="(Button.Width)" To="65"
										 Duration="0:0:0.3" />

						<DoubleAnimation Storyboard.TargetProperty="(Button.Height)" To="65"
							 Duration="0:0:0.3" />
					</Storyboard>
				</BeginStoryboard>
			</EventTrigger>
			
			<EventTrigger RoutedEvent="MouseLeave">
				<BeginStoryboard>
					<Storyboard>
						<DoubleAnimation Storyboard.TargetProperty="(Button.Width)" To="50"
										 Duration="0:0:0.3" />

						<DoubleAnimation Storyboard.TargetProperty="(Button.Height)" To="50"
							 Duration="0:0:0.3" />
					</Storyboard>
				</BeginStoryboard>
			</EventTrigger>
		</Style.Triggers>
	</Style>

	<Style x:Key="CloseButtonStyle" TargetType="{x:Type Button}">
		<Setter Property="Height" Value="30" />
		<Setter Property="Width" Value="30" />
		<Setter Property="HorizontalAlignment" Value="Right" />
		<Setter Property="VerticalAlignment" Value="Top" />
		<Setter Property="Cursor" Value="Hand" />

		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Border x:Name="ButtonBorder" BorderThickness="0">
						<Border.Background>
							<DrawingBrush Drawing="{DynamicResource PowerOffSolidDrawingGroup}" />
						</Border.Background>
					</Border>

					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Background" TargetName="ButtonBorder">
								<Setter.Value>
									<DrawingBrush Drawing="{DynamicResource PowerOffSolidDrawingHoverGroup}" />
								</Setter.Value>
							</Setter>
						</Trigger>

						<Trigger Property="IsPressed" Value="True">
							<Setter Property="Background" TargetName="ButtonBorder">
								<Setter.Value>
									<DrawingBrush Drawing="{DynamicResource PowerOffSolidDrawingHoverGroup}" />
								</Setter.Value>
							</Setter>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
</ResourceDictionary>